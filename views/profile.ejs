<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Profile</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link rel="stylesheet" href="/css/profile.css">
</head>
<body>
    <%- include('navbarAbsolute') %>
  <div id="profileWrapper">
    <div id="toast" class="toast"></div>
    <nav>
      <% if (currentUser._id == user._id) { %>
        <img onclick="noteFormToggle()"  src="/icon/sticky-note-add-line.svg" style="width: 20px; height: 20px">
        <img onclick="window.location='<%=currentUser.username%>/settings'" src="/icon/settings-2-line.svg" style="width: 20px; height: 20px">
      <% } %>
    </nav>
    <form class="noteInputForm" action="/<%=currentUser.username%>/note" method="POST">
      <textarea name="content" id="autoExpand" placeholder="Write note here..."></textarea>
      <button type="submit" class="noteAdd-btn">Share</button>
    </form>
    <div class="profile-card">
        <div class="profile-header">
            <img src="<%= user.pfp %>" class="profile-img">
            <div class="profile-info">
                <h2><%= user.name %></h2>
                <span class="handle">@<%= user.username %>
                  <% if (user.isVerified) { %>
                    <img src="/icon/blueTick.png" style="width: 17px; margin-top: 2px">
                  <% } %>
                </span>
            </div>
        </div>
        <div class="posts-info">
          <span><%=post.length%> Posts</span>
          <span id="followers-count" onclick="window.location='/<%=user.username%>/followers'"><%= user.followers.length %> Followers</span>
          <span id="following-count" onclick="window.location='/<%=user.username%>/following'"><%= user.following.length %> Following</span>
        </div>
        <div class="bio">
            <p><%- user.bio.replace(/\n/g, '<br>') %></p>
        </div>
        <% if (user.note.content) { %>
          <div id="noteContainer">
             <div>
               <span><%= createdAtFormatted %></span>
               <%if (currentUser.username == user.username) {%>
                  <form action="/<%=currentUser.username%>/note/delete" method="POST" onsubmit="return confirm('Delete Note?')">
                    <button type="submit"><i class="fa-regular fa-circle-xmark"></i></button>
                  </form>
               <%}%>
             </div>
             <p><%- user.note.content.replace(/\n/g, '<br>')%></p>
          </div>
        <% } %>
        <div class="buttons">
           <% if (currentUser._id == user._id) { %>
              <button class="editProfile-btn" onclick="window.location='<%= currentUser.username %>/update/<%= currentUser._id %>'">Edit Profile</button>
              <button class="createPost-btn" onclick="window.location='<%=currentUser.username%>/add-post'">Create Post</button>
            <% } else { %>
                  <% if (isFollowing) { %>
                      <button id="follow-btn" class="following" onclick="toggleFollow('<%= user.username %>')">Following</button>
                  <% } else if (isFollowedBack) { %>
                      <button id="follow-btn" onclick="toggleFollow('<%= user.username %>')">Follow Back</button>
                  <% } else { %>
                      <button id="follow-btn" onclick="toggleFollow('<%= user.username %>')">Follow</button>
                  <% } %>
            <% } %>
        </div>
    </div>
 </div>
 
 <div id="postWrapper">
    <hr>
    <div id="PostsNav">
      <h2>Posts</h2>
    </div>
    <hr>
      
      
      
      
      <ul id="all-post-ul-container">
         <% post.map(item => { %>
            <div id="<%=item._id%>" class="POSTMAINCONTAINER"> 
              <!-- 1 -->         
              <div class="POSTHEADER">
                 <div class="userInfo">
                      <img src="<%=user.pfp%>" style="width: 40px; height: 40px; border-radius: 50%">
                      <div class="names">
                         <p><%=user.username%>
                          <% if (user.isVerified) { %>
                            <img src="/icon/blueTick.png" style="width: 17px">
                          <% } %>
                         </p>
                         <span><%=item.createdAtFormatted%></span>
                      </div>
                 </div>
                 <div class="POSTDELETBUTTON">
                    <% if (currentUser._id == item.createdBy) { %>
                        <form action="/<%=currentUser.username%>/delete/<%=item._id%>" method="post" onsubmit="return confirm('Are you sure you want to delete this post?')")>
                           <button type="submit" id="postDeleteBtn">•••</button>
                        </form>
                    <% } %>
                 </div>
              </div>
              
              <!-- 2 -->      
              <div class="titleAndImagePost">
                <img src="<%= item.imageUrl%>">
                
                 <div class="post-actions">
                    <div id="like-btn-<%= item._id %>" class="like-btn" onclick="toggleLike('<%= item._id %>', '<%= currentUser._id %>')">
                      <i class="<%= item.likes.includes(currentUser._id) ? 'fa fa-heart redHeart' : 'fa-regular fa-heart' %>" id="like-logo-<%= item._id %>"></i>
                      <span id="like-count-<%= item._id %>"><%= item.likes.length %></span>
                    </div>
                    <div id="comment-btn-<%= item._id %>" onclick="commentShowToggle('<%=item._id%>')">
                      <i class="fa-regular fa-comment"></i>
                      <span id="length-<%=item._id%>"><%=item.comments.length%></span>
                    </div>
                </div>
                
                <p><%- item.title.replace(/\n/g, '<br>') %></p>
              </div>
              
              <!-- 3 -->        
              <div class="COMENTCONTAINER" id="comments-<%=item._id%>">
                  <ul class="ALLCOMMENTS" id="comments-section-<%= item._id %>">
                    <% item.comments.forEach(comment => { %>
                      <li id="comment-<%= comment._id %>" onclick="location.href='/<%=comment.commentedBy.username%>'"> 
                         <div>
                            <img src="<%= comment.commentedBy.pfp %>" style="height:35px; width:35px; border-radius:50%">
                            <div>
                              <strong><%= comment.commentedBy.username %>
                                 <% if (comment.commentedBy.isVerified) { %>
                                    <img src="/icon/blueTick.png" style="width: 17px">
                                 <% } %>
                                 <span style="font-size:10px; font-weight:500; color: #888;"><%=comment.createdAtFormatted%></span>
                              </strong>
                              <p><%= comment.text %></p>
                            </div>
                         </div>
                         <% if (currentUser._id == item.createdBy || currentUser._id == comment.commentedBy._id) { %>
                             <button onclick="deleteComment('<%= comment._id %>')" id="postDeleteBtn">•••</button>
                         <% } %>
                      </li>
                    <% }) %>
                  </ul>
                  
                  <div class="commentSendFrom">
                    <input type="text" id="textComment-<%=item._id%>"  placeholder="Write Comment..." required>
                    <button onclick="commentPush('<%=currentUser._id%>', '<%=item._id%>')">Send</button>
                 </div>
                  
              </div>
            </div>
         <% }) %> 
     </ul>
  </div>
    
   <script>
        // Check for a success message in the query string
        const urlParams = new URLSearchParams(window.location.search);
        const message = urlParams.get('message');
        
        if (message) {
          // Show the toast with the message
          const toast = document.getElementById('toast');
          toast.textContent = message;
          toast.classList.add('show');
          
          // Hide the toast after 3 seconds
          setTimeout(() => {
            toast.classList.remove('show');
          }, 3000);
        }
        
        
        const textarea = document.getElementById('autoExpand');

        textarea.addEventListener('input', function () {
            this.style.height = 'auto';
            this.style.height = this.scrollHeight + 'px';
        });
        
        //noteFormToggle
        function noteFormToggle() {
          document.querySelector('.noteInputForm').classList.toggle('formShow')
        }

        async function toggleLike(postId, userId) {
           const response = await fetch(`/lc/like/${postId}/${userId}`, {
              method: 'POST',
              headers: {'Content-Type': 'application/json'}
            });
            if (response.ok) {
              const data = await response.json();
              
              const likeCountElement = document.getElementById(`like-count-${postId}`);
              const likeLogo = document.getElementById(`like-logo-${postId}`);
              if (likeCountElement){
                 likeCountElement.textContent = data.likes;
              }
              
              // Update the heart icon based on like status
              if (data.isLiked) {
                likeLogo.className = 'fa fa-heart redHeart'; // Change to filled heart
              } else {
                likeLogo.className = 'fa-regular fa-heart'; // Change to empty heart
              }
            }
        }
        
        function commentShowToggle(postId) {
          const COMENTCONTAINER = document.getElementById(`comments-${postId}`)
          COMENTCONTAINER.classList.toggle('commentShow')
        }
        
       
        async function deleteComment(commentId) {
          const response = await fetch(`/delete/${commentId}`, {
            method: 'POST',
          });

          if (response.ok) {
              const data = await response.json()
              const commentElement = document.getElementById(`comment-${commentId}`);
              if (commentElement) { 
                  const confirmDelete = confirm('Delete this comment?');
                  if (confirmDelete) {
                      commentElement.remove()
                  }
               } 
           } 
        }
        
        
        async function commentPush(userId, postId) {
        const textInput = document.getElementById(`textComment-${postId}`);
        const text = textInput.value.trim();
      
        if (!text) return; 
      
        const response = await fetch(`/lc/comment/${userId}/${postId}`, {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ text })
        });
    
        if (response.ok) {
          const data = await response.json();
          const newComment = data.comment;
          
          const ul = document.getElementById(`comments-section-${postId}`);
          ul.innerHTML += `
                <li id="comment-${newComment._id}">
                  <div>
                    <img src="${newComment.commentedBy.pfp}" style="height:35px; width:35px; border-radius:50%">
                    <div>
                      <strong>${newComment.commentedBy.username}
                        ${newComment.commentedBy.isVerified ? `<img src="/icon/blueTick.png" style="width: 17px; margin-top: 2px">` : ''}
                        <span style="font-size:10px; font-weight:500; color: #888;">
                          ${new Date(newComment.createdAt).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit', hour12: true })}
                        </span>
                    </strong>
                      <p>${newComment.text}</p>
                    </div>
                  </div>
                  ${newComment.commentedBy._id === userId ? `<button onclick="deleteComment('${newComment._id}')" id="postDeleteBtn">•••</button>` : ''}
                </li>
              `;

          
    
          textInput.value = '';
          let commentsCountElement = document.getElementById(`length-${postId}`)
          commentsCountElement.textContent = data.commentsCount;
        }
      }
      
      
      async function toggleFollow(username) {
          const response = await fetch(`/follow/${username}`, {
              method: 'POST',
          });
      
          if (response.ok) {
              const data = await response.json();
              
              // Update the followers count
              const followersCountElement = document.getElementById('followers-count');
              if (followersCountElement) {
                  followersCountElement.textContent = `${data.followersCount} Followers`;
              }
            
              // Toggle the follow/unfollow button text and class
              const followButton = document.getElementById('follow-btn');
           
              if (followButton) {
                  if (data.message) {
                      followButton.textContent = 'Following';
                      followButton.classList.add('following');
                  } else if (data.isFollowedBack) {
                      followButton.textContent = 'Follow Back';
                      followButton.classList.remove('following');
                  } else {
                      followButton.textContent = 'Follow';
                      followButton.classList.remove('following');
                  }
              }
              
          }
      }
  </script>
</body>
</html>